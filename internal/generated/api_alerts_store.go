// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_alerts_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas AcknowledgeAlertOperation, GetAlertOperation, ListAlertsOperation, ListAlertsByAlertConfigurationIdOperation

type AcknowledgeAlertOperation interface {
	AcknowledgeAlert (*atlasv2.AcknowledgeAlertApiParams) (*atlasv2.AlertViewForNdsGroup, error)
}

// AcknowledgeAlert encapsulates the logic to manage different cloud providers.
func (s *Store) AcknowledgeAlert(params *atlasv2.AcknowledgeAlertApiParams) (*atlasv2.AlertViewForNdsGroup, error) {
	result, _, err := s.clientv2.AlertsApi.AcknowledgeAlertWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetAlertOperation interface {
	GetAlert (*atlasv2.GetAlertApiParams) (*atlasv2.AlertViewForNdsGroup, error)
}

// GetAlert encapsulates the logic to manage different cloud providers.
func (s *Store) GetAlert(params *atlasv2.GetAlertApiParams) (*atlasv2.AlertViewForNdsGroup, error) {
	result, _, err := s.clientv2.AlertsApi.GetAlertWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListAlertsOperation interface {
	ListAlerts (*atlasv2.ListAlertsApiParams) (*atlasv2.PaginatedAlert, error)
}

// ListAlerts encapsulates the logic to manage different cloud providers.
func (s *Store) ListAlerts(params *atlasv2.ListAlertsApiParams) (*atlasv2.PaginatedAlert, error) {
	result, _, err := s.clientv2.AlertsApi.ListAlertsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListAlertsByAlertConfigurationIdOperation interface {
	ListAlertsByAlertConfigurationId (*atlasv2.ListAlertsByAlertConfigurationIdApiParams) (*atlasv2.PaginatedAlert, error)
}

// ListAlertsByAlertConfigurationId encapsulates the logic to manage different cloud providers.
func (s *Store) ListAlertsByAlertConfigurationId(params *atlasv2.ListAlertsByAlertConfigurationIdApiParams) (*atlasv2.PaginatedAlert, error) {
	result, _, err := s.clientv2.AlertsApi.ListAlertsByAlertConfigurationIdWithParams(s.ctx, params).Execute()
	return &result, err
}

