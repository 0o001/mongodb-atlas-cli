// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_third_party_integrations_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateThirdPartyIntegrationOperation, DeleteThirdPartyIntegrationOperation, GetThirdPartyIntegrationOperation, ListThirdPartyIntegrationsOperation, UpdateThirdPartyIntegrationOperation

type CreateThirdPartyIntegrationOperation interface {
	CreateThirdPartyIntegration (*atlasv2.CreateThirdPartyIntegrationApiParams) (*atlasv2.PaginatedIntegration, error)
}

// CreateThirdPartyIntegration encapsulates the logic to manage different cloud providers.
func (s *Store) CreateThirdPartyIntegration(params *atlasv2.CreateThirdPartyIntegrationApiParams) (*atlasv2.PaginatedIntegration, error) {
	result, _, err := s.clientv2.ThirdPartyIntegrationsApi.CreateThirdPartyIntegrationWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteThirdPartyIntegrationOperation interface {
	DeleteThirdPartyIntegration (*atlasv2.DeleteThirdPartyIntegrationApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteThirdPartyIntegration encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteThirdPartyIntegration(params *atlasv2.DeleteThirdPartyIntegrationApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.ThirdPartyIntegrationsApi.DeleteThirdPartyIntegrationWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetThirdPartyIntegrationOperation interface {
	GetThirdPartyIntegration (*atlasv2.GetThirdPartyIntegrationApiParams) (*atlasv2.Integration, error)
}

// GetThirdPartyIntegration encapsulates the logic to manage different cloud providers.
func (s *Store) GetThirdPartyIntegration(params *atlasv2.GetThirdPartyIntegrationApiParams) (*atlasv2.Integration, error) {
	result, _, err := s.clientv2.ThirdPartyIntegrationsApi.GetThirdPartyIntegrationWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListThirdPartyIntegrationsOperation interface {
	ListThirdPartyIntegrations (*atlasv2.ListThirdPartyIntegrationsApiParams) (*atlasv2.PaginatedIntegration, error)
}

// ListThirdPartyIntegrations encapsulates the logic to manage different cloud providers.
func (s *Store) ListThirdPartyIntegrations(params *atlasv2.ListThirdPartyIntegrationsApiParams) (*atlasv2.PaginatedIntegration, error) {
	result, _, err := s.clientv2.ThirdPartyIntegrationsApi.ListThirdPartyIntegrationsWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateThirdPartyIntegrationOperation interface {
	UpdateThirdPartyIntegration (*atlasv2.UpdateThirdPartyIntegrationApiParams) (*atlasv2.PaginatedIntegration, error)
}

// UpdateThirdPartyIntegration encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateThirdPartyIntegration(params *atlasv2.UpdateThirdPartyIntegrationApiParams) (*atlasv2.PaginatedIntegration, error) {
	result, _, err := s.clientv2.ThirdPartyIntegrationsApi.UpdateThirdPartyIntegrationWithParams(s.ctx, params).Execute()
	return &result, err
}

