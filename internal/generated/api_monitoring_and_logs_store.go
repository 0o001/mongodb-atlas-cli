// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_monitoring_and_logs_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas GetAtlasProcessOperation, GetDatabaseOperation, GetDatabaseMeasurementsOperation, GetDiskMeasurementsOperation, GetHostLogsOperation, GetHostMeasurementsOperation, GetIndexMetricsOperation, GetMeasurementsOperation, ListAtlasProcessesOperation, ListDatabasesOperation, ListDiskMeasurementsOperation, ListDiskPartitionsOperation, ListIndexMetricsOperation, ListMetricTypesOperation

type GetAtlasProcessOperation interface {
	GetAtlasProcess (*atlasv2.GetAtlasProcessApiParams) (*atlasv2.HostViewAtlas, error)
}

// GetAtlasProcess encapsulates the logic to manage different cloud providers.
func (s *Store) GetAtlasProcess(params *atlasv2.GetAtlasProcessApiParams) (*atlasv2.HostViewAtlas, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetAtlasProcessWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetDatabaseOperation interface {
	GetDatabase (*atlasv2.GetDatabaseApiParams) (*atlasv2.Database, error)
}

// GetDatabase encapsulates the logic to manage different cloud providers.
func (s *Store) GetDatabase(params *atlasv2.GetDatabaseApiParams) (*atlasv2.Database, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetDatabaseWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetDatabaseMeasurementsOperation interface {
	GetDatabaseMeasurements (*atlasv2.GetDatabaseMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error)
}

// GetDatabaseMeasurements encapsulates the logic to manage different cloud providers.
func (s *Store) GetDatabaseMeasurements(params *atlasv2.GetDatabaseMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetDatabaseMeasurementsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetDiskMeasurementsOperation interface {
	GetDiskMeasurements (*atlasv2.GetDiskMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error)
}

// GetDiskMeasurements encapsulates the logic to manage different cloud providers.
func (s *Store) GetDiskMeasurements(params *atlasv2.GetDiskMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetDiskMeasurementsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetHostLogsOperation interface {
	GetHostLogs (*atlasv2.GetHostLogsApiParams) (*atlasv2.*os.File, error)
}

// GetHostLogs encapsulates the logic to manage different cloud providers.
func (s *Store) GetHostLogs(params *atlasv2.GetHostLogsApiParams) (*atlasv2.*os.File, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetHostLogsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetHostMeasurementsOperation interface {
	GetHostMeasurements (*atlasv2.GetHostMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error)
}

// GetHostMeasurements encapsulates the logic to manage different cloud providers.
func (s *Store) GetHostMeasurements(params *atlasv2.GetHostMeasurementsApiParams) (*atlasv2.MeasurementsGeneralViewAtlas, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetHostMeasurementsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetIndexMetricsOperation interface {
	GetIndexMetrics (*atlasv2.GetIndexMetricsApiParams) (*atlasv2.MeasurementsIndexes, error)
}

// GetIndexMetrics encapsulates the logic to manage different cloud providers.
func (s *Store) GetIndexMetrics(params *atlasv2.GetIndexMetricsApiParams) (*atlasv2.MeasurementsIndexes, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetIndexMetricsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetMeasurementsOperation interface {
	GetMeasurements (*atlasv2.GetMeasurementsApiParams) (*atlasv2.MeasurementsNonIndex, error)
}

// GetMeasurements encapsulates the logic to manage different cloud providers.
func (s *Store) GetMeasurements(params *atlasv2.GetMeasurementsApiParams) (*atlasv2.MeasurementsNonIndex, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.GetMeasurementsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListAtlasProcessesOperation interface {
	ListAtlasProcesses (*atlasv2.ListAtlasProcessesApiParams) (*atlasv2.PaginatedHostViewAtlas, error)
}

// ListAtlasProcesses encapsulates the logic to manage different cloud providers.
func (s *Store) ListAtlasProcesses(params *atlasv2.ListAtlasProcessesApiParams) (*atlasv2.PaginatedHostViewAtlas, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListAtlasProcessesWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListDatabasesOperation interface {
	ListDatabases (*atlasv2.ListDatabasesApiParams) (*atlasv2.PaginatedDatabase, error)
}

// ListDatabases encapsulates the logic to manage different cloud providers.
func (s *Store) ListDatabases(params *atlasv2.ListDatabasesApiParams) (*atlasv2.PaginatedDatabase, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListDatabasesWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListDiskMeasurementsOperation interface {
	ListDiskMeasurements (*atlasv2.ListDiskMeasurementsApiParams) (*atlasv2.DiskPartition, error)
}

// ListDiskMeasurements encapsulates the logic to manage different cloud providers.
func (s *Store) ListDiskMeasurements(params *atlasv2.ListDiskMeasurementsApiParams) (*atlasv2.DiskPartition, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListDiskMeasurementsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListDiskPartitionsOperation interface {
	ListDiskPartitions (*atlasv2.ListDiskPartitionsApiParams) (*atlasv2.PaginatedDiskPartition, error)
}

// ListDiskPartitions encapsulates the logic to manage different cloud providers.
func (s *Store) ListDiskPartitions(params *atlasv2.ListDiskPartitionsApiParams) (*atlasv2.PaginatedDiskPartition, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListDiskPartitionsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListIndexMetricsOperation interface {
	ListIndexMetrics (*atlasv2.ListIndexMetricsApiParams) (*atlasv2.MeasurementsIndexes, error)
}

// ListIndexMetrics encapsulates the logic to manage different cloud providers.
func (s *Store) ListIndexMetrics(params *atlasv2.ListIndexMetricsApiParams) (*atlasv2.MeasurementsIndexes, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListIndexMetricsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListMetricTypesOperation interface {
	ListMetricTypes (*atlasv2.ListMetricTypesApiParams) (*atlasv2.FTSMetrics, error)
}

// ListMetricTypes encapsulates the logic to manage different cloud providers.
func (s *Store) ListMetricTypes(params *atlasv2.ListMetricTypesApiParams) (*atlasv2.FTSMetrics, error) {
	result, _, err := s.clientv2.MonitoringAndLogsApi.ListMetricTypesWithParams(s.ctx, params).Execute()
	return &result, err
}

