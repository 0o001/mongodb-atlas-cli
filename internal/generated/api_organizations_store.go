// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_organizations_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateOrganizationOperation, CreateOrganizationInvitationOperation, DeleteOrganizationOperation, DeleteOrganizationInvitationOperation, GetOrganizationOperation, GetOrganizationInvitationOperation, GetOrganizationSettingsOperation, ListOrganizationInvitationsOperation, ListOrganizationProjectsOperation, ListOrganizationUsersOperation, ListOrganizationsOperation, RenameOrganizationOperation, UpdateOrganizationInvitationOperation, UpdateOrganizationInvitationByIdOperation, UpdateOrganizationSettingsOperation

type CreateOrganizationOperation interface {
	CreateOrganization (*atlasv2.CreateOrganizationApiParams) (*atlasv2.CreateOrganizationResponse, error)
}

// CreateOrganization encapsulates the logic to manage different cloud providers.
func (s *Store) CreateOrganization(params *atlasv2.CreateOrganizationApiParams) (*atlasv2.CreateOrganizationResponse, error) {
	result, _, err := s.clientv2.OrganizationsApi.CreateOrganizationWithParams(s.ctx, params).Execute()
	return &result, err
}

type CreateOrganizationInvitationOperation interface {
	CreateOrganizationInvitation (*atlasv2.CreateOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error)
}

// CreateOrganizationInvitation encapsulates the logic to manage different cloud providers.
func (s *Store) CreateOrganizationInvitation(params *atlasv2.CreateOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error) {
	result, _, err := s.clientv2.OrganizationsApi.CreateOrganizationInvitationWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteOrganizationOperation interface {
	DeleteOrganization (*atlasv2.DeleteOrganizationApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteOrganization encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteOrganization(params *atlasv2.DeleteOrganizationApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.OrganizationsApi.DeleteOrganizationWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteOrganizationInvitationOperation interface {
	DeleteOrganizationInvitation (*atlasv2.DeleteOrganizationInvitationApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteOrganizationInvitation encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteOrganizationInvitation(params *atlasv2.DeleteOrganizationInvitationApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.OrganizationsApi.DeleteOrganizationInvitationWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetOrganizationOperation interface {
	GetOrganization (*atlasv2.GetOrganizationApiParams) (*atlasv2.Organization, error)
}

// GetOrganization encapsulates the logic to manage different cloud providers.
func (s *Store) GetOrganization(params *atlasv2.GetOrganizationApiParams) (*atlasv2.Organization, error) {
	result, _, err := s.clientv2.OrganizationsApi.GetOrganizationWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetOrganizationInvitationOperation interface {
	GetOrganizationInvitation (*atlasv2.GetOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error)
}

// GetOrganizationInvitation encapsulates the logic to manage different cloud providers.
func (s *Store) GetOrganizationInvitation(params *atlasv2.GetOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error) {
	result, _, err := s.clientv2.OrganizationsApi.GetOrganizationInvitationWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetOrganizationSettingsOperation interface {
	GetOrganizationSettings (*atlasv2.GetOrganizationSettingsApiParams) (*atlasv2.OrganizationSettings, error)
}

// GetOrganizationSettings encapsulates the logic to manage different cloud providers.
func (s *Store) GetOrganizationSettings(params *atlasv2.GetOrganizationSettingsApiParams) (*atlasv2.OrganizationSettings, error) {
	result, _, err := s.clientv2.OrganizationsApi.GetOrganizationSettingsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListOrganizationInvitationsOperation interface {
	ListOrganizationInvitations (*atlasv2.ListOrganizationInvitationsApiParams) (*atlasv2.[]OrganizationInvitation, error)
}

// ListOrganizationInvitations encapsulates the logic to manage different cloud providers.
func (s *Store) ListOrganizationInvitations(params *atlasv2.ListOrganizationInvitationsApiParams) (*atlasv2.[]OrganizationInvitation, error) {
	result, _, err := s.clientv2.OrganizationsApi.ListOrganizationInvitationsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListOrganizationProjectsOperation interface {
	ListOrganizationProjects (*atlasv2.ListOrganizationProjectsApiParams) (*atlasv2.PaginatedAtlasGroup, error)
}

// ListOrganizationProjects encapsulates the logic to manage different cloud providers.
func (s *Store) ListOrganizationProjects(params *atlasv2.ListOrganizationProjectsApiParams) (*atlasv2.PaginatedAtlasGroup, error) {
	result, _, err := s.clientv2.OrganizationsApi.ListOrganizationProjectsWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListOrganizationUsersOperation interface {
	ListOrganizationUsers (*atlasv2.ListOrganizationUsersApiParams) (*atlasv2.PaginatedAppUser, error)
}

// ListOrganizationUsers encapsulates the logic to manage different cloud providers.
func (s *Store) ListOrganizationUsers(params *atlasv2.ListOrganizationUsersApiParams) (*atlasv2.PaginatedAppUser, error) {
	result, _, err := s.clientv2.OrganizationsApi.ListOrganizationUsersWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListOrganizationsOperation interface {
	ListOrganizations (*atlasv2.ListOrganizationsApiParams) (*atlasv2.PaginatedOrganization, error)
}

// ListOrganizations encapsulates the logic to manage different cloud providers.
func (s *Store) ListOrganizations(params *atlasv2.ListOrganizationsApiParams) (*atlasv2.PaginatedOrganization, error) {
	result, _, err := s.clientv2.OrganizationsApi.ListOrganizationsWithParams(s.ctx, params).Execute()
	return &result, err
}

type RenameOrganizationOperation interface {
	RenameOrganization (*atlasv2.RenameOrganizationApiParams) (*atlasv2.Organization, error)
}

// RenameOrganization encapsulates the logic to manage different cloud providers.
func (s *Store) RenameOrganization(params *atlasv2.RenameOrganizationApiParams) (*atlasv2.Organization, error) {
	result, _, err := s.clientv2.OrganizationsApi.RenameOrganizationWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateOrganizationInvitationOperation interface {
	UpdateOrganizationInvitation (*atlasv2.UpdateOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error)
}

// UpdateOrganizationInvitation encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateOrganizationInvitation(params *atlasv2.UpdateOrganizationInvitationApiParams) (*atlasv2.OrganizationInvitation, error) {
	result, _, err := s.clientv2.OrganizationsApi.UpdateOrganizationInvitationWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateOrganizationInvitationByIdOperation interface {
	UpdateOrganizationInvitationById (*atlasv2.UpdateOrganizationInvitationByIdApiParams) (*atlasv2.OrganizationInvitation, error)
}

// UpdateOrganizationInvitationById encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateOrganizationInvitationById(params *atlasv2.UpdateOrganizationInvitationByIdApiParams) (*atlasv2.OrganizationInvitation, error) {
	result, _, err := s.clientv2.OrganizationsApi.UpdateOrganizationInvitationByIdWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateOrganizationSettingsOperation interface {
	UpdateOrganizationSettings (*atlasv2.UpdateOrganizationSettingsApiParams) (*atlasv2.OrganizationSettings, error)
}

// UpdateOrganizationSettings encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateOrganizationSettings(params *atlasv2.UpdateOrganizationSettingsApiParams) (*atlasv2.OrganizationSettings, error) {
	result, _, err := s.clientv2.OrganizationsApi.UpdateOrganizationSettingsWithParams(s.ctx, params).Execute()
	return &result, err
}

