// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_online_archive_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateOnlineArchiveOperation, DeleteOnlineArchiveOperation, DownloadOnlineArchiveQueryLogsOperation, GetOnlineArchiveOperation, ListOnlineArchivesOperation, UpdateOnlineArchiveOperation

type CreateOnlineArchiveOperation interface {
	CreateOnlineArchive (*atlasv2.CreateOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error)
}

// CreateOnlineArchive encapsulates the logic to manage different cloud providers.
func (s *Store) CreateOnlineArchive(params *atlasv2.CreateOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.CreateOnlineArchiveWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteOnlineArchiveOperation interface {
	DeleteOnlineArchive (*atlasv2.DeleteOnlineArchiveApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteOnlineArchive encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteOnlineArchive(params *atlasv2.DeleteOnlineArchiveApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.DeleteOnlineArchiveWithParams(s.ctx, params).Execute()
	return &result, err
}

type DownloadOnlineArchiveQueryLogsOperation interface {
	DownloadOnlineArchiveQueryLogs (*atlasv2.DownloadOnlineArchiveQueryLogsApiParams) (*atlasv2.*os.File, error)
}

// DownloadOnlineArchiveQueryLogs encapsulates the logic to manage different cloud providers.
func (s *Store) DownloadOnlineArchiveQueryLogs(params *atlasv2.DownloadOnlineArchiveQueryLogsApiParams) (*atlasv2.*os.File, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.DownloadOnlineArchiveQueryLogsWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetOnlineArchiveOperation interface {
	GetOnlineArchive (*atlasv2.GetOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error)
}

// GetOnlineArchive encapsulates the logic to manage different cloud providers.
func (s *Store) GetOnlineArchive(params *atlasv2.GetOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.GetOnlineArchiveWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListOnlineArchivesOperation interface {
	ListOnlineArchives (*atlasv2.ListOnlineArchivesApiParams) (*atlasv2.PaginatedOnlineArchive, error)
}

// ListOnlineArchives encapsulates the logic to manage different cloud providers.
func (s *Store) ListOnlineArchives(params *atlasv2.ListOnlineArchivesApiParams) (*atlasv2.PaginatedOnlineArchive, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.ListOnlineArchivesWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateOnlineArchiveOperation interface {
	UpdateOnlineArchive (*atlasv2.UpdateOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error)
}

// UpdateOnlineArchive encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateOnlineArchive(params *atlasv2.UpdateOnlineArchiveApiParams) (*atlasv2.OnlineArchive, error) {
	result, _, err := s.clientv2.OnlineArchiveApi.UpdateOnlineArchiveWithParams(s.ctx, params).Execute()
	return &result, err
}

