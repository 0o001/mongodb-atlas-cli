// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_custom_database_roles_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateCustomDatabaseRoleOperation, DeleteCustomDatabaseRoleOperation, GetCustomDatabaseRoleOperation, ListCustomDatabaseRolesOperation, UpdateCustomDatabaseRoleOperation

type CreateCustomDatabaseRoleOperation interface {
	CreateCustomDatabaseRole (*atlasv2.CreateCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error)
}

// CreateCustomDatabaseRole encapsulates the logic to manage different cloud providers.
func (s *Store) CreateCustomDatabaseRole(params *atlasv2.CreateCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error) {
	result, _, err := s.clientv2.CustomDatabaseRolesApi.CreateCustomDatabaseRoleWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteCustomDatabaseRoleOperation interface {
	DeleteCustomDatabaseRole (*atlasv2.DeleteCustomDatabaseRoleApiParams) error
}

// DeleteCustomDatabaseRole encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteCustomDatabaseRole(params *atlasv2.DeleteCustomDatabaseRoleApiParams) (error) {
	_, err := s.clientv2.CustomDatabaseRolesApi.DeleteCustomDatabaseRoleWithParams(s.ctx, params).Execute()
	return err
}

type GetCustomDatabaseRoleOperation interface {
	GetCustomDatabaseRole (*atlasv2.GetCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error)
}

// GetCustomDatabaseRole encapsulates the logic to manage different cloud providers.
func (s *Store) GetCustomDatabaseRole(params *atlasv2.GetCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error) {
	result, _, err := s.clientv2.CustomDatabaseRolesApi.GetCustomDatabaseRoleWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListCustomDatabaseRolesOperation interface {
	ListCustomDatabaseRoles (*atlasv2.ListCustomDatabaseRolesApiParams) (*atlasv2.[]CustomDBRole, error)
}

// ListCustomDatabaseRoles encapsulates the logic to manage different cloud providers.
func (s *Store) ListCustomDatabaseRoles(params *atlasv2.ListCustomDatabaseRolesApiParams) (*atlasv2.[]CustomDBRole, error) {
	result, _, err := s.clientv2.CustomDatabaseRolesApi.ListCustomDatabaseRolesWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateCustomDatabaseRoleOperation interface {
	UpdateCustomDatabaseRole (*atlasv2.UpdateCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error)
}

// UpdateCustomDatabaseRole encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateCustomDatabaseRole(params *atlasv2.UpdateCustomDatabaseRoleApiParams) (*atlasv2.CustomDBRole, error) {
	result, _, err := s.clientv2.CustomDatabaseRolesApi.UpdateCustomDatabaseRoleWithParams(s.ctx, params).Execute()
	return &result, err
}

