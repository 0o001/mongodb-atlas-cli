// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_serverless_private_endpoints_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateServerlessPrivateEndpointOperation, DeleteServerlessPrivateEndpointOperation, GetServerlessPrivateEndpointOperation, ListServerlessPrivateEndpointsOperation, UpdateServerlessPrivateEndpointOperation

type CreateServerlessPrivateEndpointOperation interface {
	CreateServerlessPrivateEndpoint (*atlasv2.CreateServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error)
}

// CreateServerlessPrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) CreateServerlessPrivateEndpoint(params *atlasv2.CreateServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error) {
	result, _, err := s.clientv2.ServerlessPrivateEndpointsApi.CreateServerlessPrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteServerlessPrivateEndpointOperation interface {
	DeleteServerlessPrivateEndpoint (*atlasv2.DeleteServerlessPrivateEndpointApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteServerlessPrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteServerlessPrivateEndpoint(params *atlasv2.DeleteServerlessPrivateEndpointApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.ServerlessPrivateEndpointsApi.DeleteServerlessPrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetServerlessPrivateEndpointOperation interface {
	GetServerlessPrivateEndpoint (*atlasv2.GetServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error)
}

// GetServerlessPrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) GetServerlessPrivateEndpoint(params *atlasv2.GetServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error) {
	result, _, err := s.clientv2.ServerlessPrivateEndpointsApi.GetServerlessPrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListServerlessPrivateEndpointsOperation interface {
	ListServerlessPrivateEndpoints (*atlasv2.ListServerlessPrivateEndpointsApiParams) (*atlasv2.[]ServerlessTenantEndpoint, error)
}

// ListServerlessPrivateEndpoints encapsulates the logic to manage different cloud providers.
func (s *Store) ListServerlessPrivateEndpoints(params *atlasv2.ListServerlessPrivateEndpointsApiParams) (*atlasv2.[]ServerlessTenantEndpoint, error) {
	result, _, err := s.clientv2.ServerlessPrivateEndpointsApi.ListServerlessPrivateEndpointsWithParams(s.ctx, params).Execute()
	return &result, err
}

type UpdateServerlessPrivateEndpointOperation interface {
	UpdateServerlessPrivateEndpoint (*atlasv2.UpdateServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error)
}

// UpdateServerlessPrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) UpdateServerlessPrivateEndpoint(params *atlasv2.UpdateServerlessPrivateEndpointApiParams) (*atlasv2.ServerlessTenantEndpoint, error) {
	result, _, err := s.clientv2.ServerlessPrivateEndpointsApi.UpdateServerlessPrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

