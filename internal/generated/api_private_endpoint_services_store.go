// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_private_endpoint_services_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreatePrivateEndpointOperation, CreatePrivateEndpointServiceOperation, DeletePrivateEndpointOperation, DeletePrivateEndpointServiceOperation, GetPrivateEndpointOperation, GetPrivateEndpointServiceOperation, GetRegionalizedPrivateEndpointSettingOperation, ListPrivateEndpointServicesOperation, ToggleRegionalizedPrivateEndpointSettingOperation

type CreatePrivateEndpointOperation interface {
	CreatePrivateEndpoint (*atlasv2.CreatePrivateEndpointApiParams) (*atlasv2.Endpoint, error)
}

// CreatePrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) CreatePrivateEndpoint(params *atlasv2.CreatePrivateEndpointApiParams) (*atlasv2.Endpoint, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.CreatePrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type CreatePrivateEndpointServiceOperation interface {
	CreatePrivateEndpointService (*atlasv2.CreatePrivateEndpointServiceApiParams) (*atlasv2.EndpointService, error)
}

// CreatePrivateEndpointService encapsulates the logic to manage different cloud providers.
func (s *Store) CreatePrivateEndpointService(params *atlasv2.CreatePrivateEndpointServiceApiParams) (*atlasv2.EndpointService, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.CreatePrivateEndpointServiceWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeletePrivateEndpointOperation interface {
	DeletePrivateEndpoint (*atlasv2.DeletePrivateEndpointApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeletePrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) DeletePrivateEndpoint(params *atlasv2.DeletePrivateEndpointApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.DeletePrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeletePrivateEndpointServiceOperation interface {
	DeletePrivateEndpointService (*atlasv2.DeletePrivateEndpointServiceApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeletePrivateEndpointService encapsulates the logic to manage different cloud providers.
func (s *Store) DeletePrivateEndpointService(params *atlasv2.DeletePrivateEndpointServiceApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.DeletePrivateEndpointServiceWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetPrivateEndpointOperation interface {
	GetPrivateEndpoint (*atlasv2.GetPrivateEndpointApiParams) (*atlasv2.Endpoint, error)
}

// GetPrivateEndpoint encapsulates the logic to manage different cloud providers.
func (s *Store) GetPrivateEndpoint(params *atlasv2.GetPrivateEndpointApiParams) (*atlasv2.Endpoint, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.GetPrivateEndpointWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetPrivateEndpointServiceOperation interface {
	GetPrivateEndpointService (*atlasv2.GetPrivateEndpointServiceApiParams) (*atlasv2.EndpointService, error)
}

// GetPrivateEndpointService encapsulates the logic to manage different cloud providers.
func (s *Store) GetPrivateEndpointService(params *atlasv2.GetPrivateEndpointServiceApiParams) (*atlasv2.EndpointService, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.GetPrivateEndpointServiceWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetRegionalizedPrivateEndpointSettingOperation interface {
	GetRegionalizedPrivateEndpointSetting (*atlasv2.GetRegionalizedPrivateEndpointSettingApiParams) (*atlasv2.ProjectSettingItem, error)
}

// GetRegionalizedPrivateEndpointSetting encapsulates the logic to manage different cloud providers.
func (s *Store) GetRegionalizedPrivateEndpointSetting(params *atlasv2.GetRegionalizedPrivateEndpointSettingApiParams) (*atlasv2.ProjectSettingItem, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.GetRegionalizedPrivateEndpointSettingWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListPrivateEndpointServicesOperation interface {
	ListPrivateEndpointServices (*atlasv2.ListPrivateEndpointServicesApiParams) (*atlasv2.[]EndpointService, error)
}

// ListPrivateEndpointServices encapsulates the logic to manage different cloud providers.
func (s *Store) ListPrivateEndpointServices(params *atlasv2.ListPrivateEndpointServicesApiParams) (*atlasv2.[]EndpointService, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.ListPrivateEndpointServicesWithParams(s.ctx, params).Execute()
	return &result, err
}

type ToggleRegionalizedPrivateEndpointSettingOperation interface {
	ToggleRegionalizedPrivateEndpointSetting (*atlasv2.ToggleRegionalizedPrivateEndpointSettingApiParams) (*atlasv2.ProjectSettingItem, error)
}

// ToggleRegionalizedPrivateEndpointSetting encapsulates the logic to manage different cloud providers.
func (s *Store) ToggleRegionalizedPrivateEndpointSetting(params *atlasv2.ToggleRegionalizedPrivateEndpointSettingApiParams) (*atlasv2.ProjectSettingItem, error) {
	result, _, err := s.clientv2.PrivateEndpointServicesApi.ToggleRegionalizedPrivateEndpointSettingWithParams(s.ctx, params).Execute()
	return &result, err
}

