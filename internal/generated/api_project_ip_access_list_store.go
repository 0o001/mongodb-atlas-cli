// Copyright 2023 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package store

import (
	"context"
	atlasv2 "go.mongodb.org/atlas/mongodbatlasv2"
)

//go:generate mockgen -destination=../../mocks/atlas/api_project_ip_access_list_store_mock.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas CreateProjectIpAccessListOperation, DeleteProjectIpAccessListOperation, GetProjectIpAccessListStatusOperation, GetProjectIpListOperation, ListProjectIpAccessListsOperation

type CreateProjectIpAccessListOperation interface {
	CreateProjectIpAccessList (*atlasv2.CreateProjectIpAccessListApiParams) (*atlasv2.PaginatedNetworkAccess, error)
}

// CreateProjectIpAccessList encapsulates the logic to manage different cloud providers.
func (s *Store) CreateProjectIpAccessList(params *atlasv2.CreateProjectIpAccessListApiParams) (*atlasv2.PaginatedNetworkAccess, error) {
	result, _, err := s.clientv2.ProjectIPAccessListApi.CreateProjectIpAccessListWithParams(s.ctx, params).Execute()
	return &result, err
}

type DeleteProjectIpAccessListOperation interface {
	DeleteProjectIpAccessList (*atlasv2.DeleteProjectIpAccessListApiParams) (*atlasv2.map[string]interface{}, error)
}

// DeleteProjectIpAccessList encapsulates the logic to manage different cloud providers.
func (s *Store) DeleteProjectIpAccessList(params *atlasv2.DeleteProjectIpAccessListApiParams) (*atlasv2.map[string]interface{}, error) {
	result, _, err := s.clientv2.ProjectIPAccessListApi.DeleteProjectIpAccessListWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetProjectIpAccessListStatusOperation interface {
	GetProjectIpAccessListStatus (*atlasv2.GetProjectIpAccessListStatusApiParams) (*atlasv2.NetworkPermissionEntryStatus, error)
}

// GetProjectIpAccessListStatus encapsulates the logic to manage different cloud providers.
func (s *Store) GetProjectIpAccessListStatus(params *atlasv2.GetProjectIpAccessListStatusApiParams) (*atlasv2.NetworkPermissionEntryStatus, error) {
	result, _, err := s.clientv2.ProjectIPAccessListApi.GetProjectIpAccessListStatusWithParams(s.ctx, params).Execute()
	return &result, err
}

type GetProjectIpListOperation interface {
	GetProjectIpList (*atlasv2.GetProjectIpListApiParams) (*atlasv2.NetworkPermissionEntry, error)
}

// GetProjectIpList encapsulates the logic to manage different cloud providers.
func (s *Store) GetProjectIpList(params *atlasv2.GetProjectIpListApiParams) (*atlasv2.NetworkPermissionEntry, error) {
	result, _, err := s.clientv2.ProjectIPAccessListApi.GetProjectIpListWithParams(s.ctx, params).Execute()
	return &result, err
}

type ListProjectIpAccessListsOperation interface {
	ListProjectIpAccessLists (*atlasv2.ListProjectIpAccessListsApiParams) (*atlasv2.PaginatedNetworkAccess, error)
}

// ListProjectIpAccessLists encapsulates the logic to manage different cloud providers.
func (s *Store) ListProjectIpAccessLists(params *atlasv2.ListProjectIpAccessListsApiParams) (*atlasv2.PaginatedNetworkAccess, error) {
	result, _, err := s.clientv2.ProjectIPAccessListApi.ListProjectIpAccessListsWithParams(s.ctx, params).Execute()
	return &result, err
}

