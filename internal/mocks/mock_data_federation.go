// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/internal/store (interfaces: DataFederationLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
)

// MockDataFederationLister is a mock of DataFederationLister interface.
type MockDataFederationLister struct {
	ctrl     *gomock.Controller
	recorder *MockDataFederationListerMockRecorder
}

// MockDataFederationListerMockRecorder is the mock recorder for MockDataFederationLister.
type MockDataFederationListerMockRecorder struct {
	mock *MockDataFederationLister
}

// NewMockDataFederationLister creates a new mock instance.
func NewMockDataFederationLister(ctrl *gomock.Controller) *MockDataFederationLister {
	mock := &MockDataFederationLister{ctrl: ctrl}
	mock.recorder = &MockDataFederationListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataFederationLister) EXPECT() *MockDataFederationListerMockRecorder {
	return m.recorder
}

// DataFederationList mocks base method.
func (m *MockDataFederationLister) DataFederationList(arg0 string) ([]*mongodbatlas.DataFederationInstance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataFederationList", arg0)
	ret0, _ := ret[0].([]*mongodbatlas.DataFederationInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DataFederationList indicates an expected call of DataFederationList.
func (mr *MockDataFederationListerMockRecorder) DataFederationList(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataFederationList", reflect.TypeOf((*MockDataFederationLister)(nil).DataFederationList), arg0)
}
