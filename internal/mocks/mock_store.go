// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfig is a mock of Config interface
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// Service mocks base method
func (m *MockConfig) Service() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Service")
	ret0, _ := ret[0].(string)
	return ret0
}

// Service indicates an expected call of Service
func (mr *MockConfigMockRecorder) Service() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Service", reflect.TypeOf((*MockConfig)(nil).Service))
}

// PublicAPIKey mocks base method
func (m *MockConfig) PublicAPIKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublicAPIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// PublicAPIKey indicates an expected call of PublicAPIKey
func (mr *MockConfigMockRecorder) PublicAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublicAPIKey", reflect.TypeOf((*MockConfig)(nil).PublicAPIKey))
}

// PrivateAPIKey mocks base method
func (m *MockConfig) PrivateAPIKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateAPIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// PrivateAPIKey indicates an expected call of PrivateAPIKey
func (mr *MockConfigMockRecorder) PrivateAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateAPIKey", reflect.TypeOf((*MockConfig)(nil).PrivateAPIKey))
}

// OpsManagerURL mocks base method
func (m *MockConfig) OpsManagerURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpsManagerURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// OpsManagerURL indicates an expected call of OpsManagerURL
func (mr *MockConfigMockRecorder) OpsManagerURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpsManagerURL", reflect.TypeOf((*MockConfig)(nil).OpsManagerURL))
}
