// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/profile.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfig is a mock of Config interface
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetService mocks base method
func (m *MockConfig) GetService() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetService")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetService indicates an expected call of GetService
func (mr *MockConfigMockRecorder) GetService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetService", reflect.TypeOf((*MockConfig)(nil).GetService))
}

// SetService mocks base method
func (m *MockConfig) SetService(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetService", arg0)
}

// SetService indicates an expected call of SetService
func (mr *MockConfigMockRecorder) SetService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetService", reflect.TypeOf((*MockConfig)(nil).SetService), arg0)
}

// GetPublicAPIKey mocks base method
func (m *MockConfig) GetPublicAPIKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicAPIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPublicAPIKey indicates an expected call of GetPublicAPIKey
func (mr *MockConfigMockRecorder) GetPublicAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicAPIKey", reflect.TypeOf((*MockConfig)(nil).GetPublicAPIKey))
}

// SetPublicAPIKey mocks base method
func (m *MockConfig) SetPublicAPIKey(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPublicAPIKey", arg0)
}

// SetPublicAPIKey indicates an expected call of SetPublicAPIKey
func (mr *MockConfigMockRecorder) SetPublicAPIKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPublicAPIKey", reflect.TypeOf((*MockConfig)(nil).SetPublicAPIKey), arg0)
}

// GetPrivateAPIKey mocks base method
func (m *MockConfig) GetPrivateAPIKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateAPIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPrivateAPIKey indicates an expected call of GetPrivateAPIKey
func (mr *MockConfigMockRecorder) GetPrivateAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateAPIKey", reflect.TypeOf((*MockConfig)(nil).GetPrivateAPIKey))
}

// SetPrivateAPIKey mocks base method
func (m *MockConfig) SetPrivateAPIKey(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPrivateAPIKey", arg0)
}

// SetPrivateAPIKey indicates an expected call of SetPrivateAPIKey
func (mr *MockConfigMockRecorder) SetPrivateAPIKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPrivateAPIKey", reflect.TypeOf((*MockConfig)(nil).SetPrivateAPIKey), arg0)
}

// GetOpsManagerURL mocks base method
func (m *MockConfig) GetOpsManagerURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOpsManagerURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOpsManagerURL indicates an expected call of GetOpsManagerURL
func (mr *MockConfigMockRecorder) GetOpsManagerURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOpsManagerURL", reflect.TypeOf((*MockConfig)(nil).GetOpsManagerURL))
}

// SetOpsManagerURL mocks base method
func (m *MockConfig) SetOpsManagerURL(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetOpsManagerURL", arg0)
}

// SetOpsManagerURL indicates an expected call of SetOpsManagerURL
func (mr *MockConfigMockRecorder) SetOpsManagerURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetOpsManagerURL", reflect.TypeOf((*MockConfig)(nil).SetOpsManagerURL), arg0)
}

// GetAPIPath mocks base method
func (m *MockConfig) GetAPIPath() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIPath")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAPIPath indicates an expected call of GetAPIPath
func (mr *MockConfigMockRecorder) GetAPIPath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIPath", reflect.TypeOf((*MockConfig)(nil).GetAPIPath))
}
